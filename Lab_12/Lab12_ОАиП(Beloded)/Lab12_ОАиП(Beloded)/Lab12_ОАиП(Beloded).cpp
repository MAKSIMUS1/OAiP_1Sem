#include <iostream>
#include <ctime>
#include <math.h>
void main()
{
	setlocale(LC_CTYPE, "Russian");
	using namespace std;
	//1. Даны N положительных целых чисел, которые  делятся на простые числа, 2 и 3.
	//Удалить из массива числа так, чтобы из любых двух оставшихся одно число делилось на другое.
	const int SIZE = 100;
	int A[SIZE], N, randomnoe, i = 0;
	printf("Введите размер массива(меньше 100): ");
	scanf_s("%d", &N);
	printf("Массив А:\n");
	srand((unsigned)time(NULL));
	do {
		randomnoe = rand() % 1000;
		if ((randomnoe % 2 == 0) && (randomnoe % 3 == 0) && (randomnoe % 5 != 0) && (randomnoe % 7 != 0)) {
			*(A + i) = randomnoe;
			printf("Номер элемента №%d %d\n", i + 1, *(A + i));
			i++;
		}
	} while (i < N);

	//Отсортируем его по возрастанию
	for (int i = 0; i < N - 1; i++)
		for (int j = i + 1; j < N; j++)
			if (*(A + i) > *(A + j)){
				int buff = *(A + i);
				*(A + i) = *(A + j);
				*(A + j) = buff;
			}
	//Сортируем от меншьего к большему
	printf("\nСортировка\n===============================================\n");
	for (int i = 0; i < N; i++) {
		printf("Номер элемента №%d %d\n", i + 1, A[i]);
	}

	//Убираем элементы не подходящие нам по условию   
	for (int i = N - 1; i >= 0; i--) //Начинаем перебор с самого большого числа в массиве.
		for (int j = 0; j < i; j++) //Проверяем все оставшиеся элементы на выполнения условия
			if (*(A + i) % *(A + j) != 0) { //Если не выполняется деления без остатка на j
				for (int k = j; k < N - 1; k++)
					*(A + k) = *(A + k + 1);//то затираем значение массива с индексом j, следующим за ним.
				N--;//Уменьшаем размер массива.
			}
	//Выводим результат.
	for (int i = 0; i < N; i++)
		cout << *(A + i) << " ";

}
	

	
